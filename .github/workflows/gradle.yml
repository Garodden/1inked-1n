# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: PR TEST

on:
  pull_request:
    branches:
      '!master'


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17 for x64
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    #권한 부여
    - name: Grant excute permission for gradlew
      run: chmod +x gradlew

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Test with Gradle
      run: ./gradlew --info test

    # 테스트 이후 Result 보기 위한 step 추가
    - name: Compress all report files
      if: ${{ failure() }}
      run: |
        echo "Compressing all report files..."
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        mkdir report_files
        REPORT_DIRS=$(find . -type d -path '*/build/reports/tests/test')
        for dir in $REPORT_DIRS; do
          module_path=$(echo $dir | awk -F'/build/' '{print $1}' | cut -c 3-)
          cp -r $dir report_files/$module_path/$(basename $(dirname $dir))
        done
        tar czvf report_files_$TIMESTAMP.tar.gz report_files

    - name: Upload Error Report Files To Artifacts
      if: { failure() }
      uses: actions/upload-artifact@v2
      with:
        name: report_files
        path: report_files_*.tar.gz